{"version":3,"sources":["questions.js","components/MainPage/QuestionSelector.js","utils/spy.js","utils/tape.js","utils/runCode.js","components/MainPage/Border.js","components/MainPage/Console.js","actions/console.js","utils/consoleFactory.js","components/MainPage/index.js","actions/code.js","components/LoginPage.js","actions/login.js","App.js","reducers/code.js","reducers/login.js","utils/authLogin.js","reducers/console.js","reducers/index.js","index.js"],"names":["questionList","name","content","test","QuestionSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","anchorEl","handleClicked","bind","assertThisInitialized","e","setState","currentTarget","_this$props","handleSelected","activeIndex","classes","items","questions","map","q","i","react_default","a","createElement","MenuItem_default","key","value","onClick","Button_default","aria-owns","aria-haspopup","className","button","variant","concat","Menu_default","id","open","Boolean","Component","withStyles","text-transform","spy","obj","methodName","origFn","callHistory","calledWith","secret","Math","random","toFixed","_len","arguments","length","args","Array","_key","result","apply","push","join","_len2","_key2","callCount","restore","tryCatchPatch","t","description","testBlock","comment","fail","getPatchedTape","require","tape","patches","_args$slice","slice","cb","slicedToArray","Error","toConsumableArray","combinePatch","subtest","should","wrapCode","undefined","replace","loopHead","debouncedRunCode","_","debounce","code","wrappedConsole","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","window","console","describe","vm","Script","createContext","runInContext","log","Border","ref","React","createRef","resize","startResize","endResize","width","height","document","querySelector","style","innerHeight","target","contains","current","addEventListener","allowWidth","clientX","offsetLeft","allowHeight","clientY","offsetTop","clientHeight","removeEventListener","dispatchEvent","Event","onMouseDown","children","Console","resetConsole","_ref","index1","text","index2","trim","connect","dispatch","type","createWrappedConsole","keys","reduce","cal","MainPage","testsRef","actions","_dispatch","SyntaxError","handleCodeChange","resetQuestion","changeQuestion","changeCode","changeSyntaxError","isLogin","rawCode","history","nextProps","nextState","compiledCode","innerHTML","index","newCode","fullCode","transform","transforms","dangerousForOf","spreadRest","loc","_e$loc","line","column","MainPage_Border","innerWidth","lib_default","showPrintMargin","mode","theme","onChange","tabSize","debounceChangePeriod","readOnly","MainPage_QuestionSelector","components_MainPage_Console","withRouter","codeObj","login","LoginPage","submitPassword","password","error","_this2","TextField_default","margin","placeholder","onKeyDown","keyCode","App","BrowserRouter","Route","exact","path","component","action","objectSpread","defineProperty","s","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","_console","reducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.77e1e80d.chunk.js","sourcesContent":["const questionList = [\n  {\n    name: \"countChar\",\n    content: `\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n`,\n    test: `\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n`\n  },\n  {\n    name: \"forEach, map and reduce\",\n    content: `\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n`,\n    test: `\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n`\n  },\n  {\n    name: \"adder\",\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n`\n  },\n  {\n    name: \"infinite adder\",\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n`\n  },\n  {\n    name: \"default function\",\n    content: `\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n`,\n    test: `\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n`\n  },\n  {\n    name: \"sequential\",\n    content: `\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    `\n  },\n  {\n    name: 'parallel',\n    content: `\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n`\n  },\n  {\n    name: 'combineReducers',\n    content: `\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n`,\n    test: `\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n`\n  },\n  {\n    name: 'applyMiddleware',\n    content: `\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n`,\n    test: `\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n`\n  },\n  {\n    name: 'createStore',\n    content: `\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n`,\n    test: `\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n`\n  },\n  {\n    name: 'explain',\n    content: `\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n`\n  },\n  {\n    name: 'mergeSort',\n    content: `\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n`,\n    test: `\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n`\n  },\n];\n\nexport default questionList;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport questions from '../../questions';\n\nconst styles = () => ({\n  button: {\n    'text-transform': 'none'\n  }\n});\n\nclass QuestionSelector extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { anchorEl: null };\n    this.handleClicked = this.handleClicked.bind(this);\n  }\n  handleClicked(e) {\n    this.setState({ anchorEl: e.currentTarget });\n  }\n  render() {\n    const { handleClicked } = this;\n    const { handleSelected, activeIndex, classes } = this.props;\n    const { anchorEl } = this.state;\n    const items = questions.map((q, i) => {\n      return (\n        <MenuItem \n          key={i}\n          value={i}\n          onClick={() => {\n            handleClicked(false);\n            handleSelected(i);\n          }}\n        >\n          {q.name} \n        </MenuItem>\n      );\n    });\n  \n    return (\n      <div>\n        <Button\n          aria-owns={anchorEl ? 'simple-menu' : null}\n          aria-haspopup=\"true\"\n          className={classes.button}\n          variant=\"outlined\"\n          onClick={handleClicked}\n        >\n          {`${questions[activeIndex].name}  ▼`}\n        </Button>\n        <Menu id=\"simple-menu\" open={Boolean(anchorEl)} anchorEl={anchorEl}>\n          {items}\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default  withStyles(styles)(QuestionSelector);","const spy = (obj, methodName) => {\n  const origFn = obj[methodName];\n  let callHistory = [];\n  let calledWith = {};\n\n  const secret = Math.random().toFixed(4) + '';\n  obj[methodName] = (...args) => {\n    const result = origFn.apply(obj, args);\n    callHistory.push(args);\n    calledWith[args.join(secret)] = true;\n    return result;\n  };\n  return {\n    calledWith: (...args) => !!calledWith[args.join(secret)],\n    callCount: () => callHistory.length,\n    restore: () => (obj[methodName] = origFn)\n  };\n}\n\nexport default spy;","const tryCatchPatch = (t) => (description, testBlock) => {\n  try {\n    t.comment(description);\n    testBlock(t);\n  } catch(e) {\n    t.fail(e);\n  }\n}\n\nconst combinePatch = (tape, patches) => (...args) => {\n  const [cb] = args.slice(-1);\n  if(typeof cb !== 'function') {\n    throw new Error('should provide callback');\n  }\n  tape(...args.slice(0, -1), t => {\n    for ( let key in patches ){\n      t[key] = patches[key](t)\n    }\n    try {\n      cb(t);\n    } catch (e){\n      t.fail(e);\n    }\n  })\n};\n\nconst getPatchedTape = () => {\n  delete require.cache[require.resolve('tape')];\n  const tape = require('tape'); \n  require('tape-dom')(tape);\n  return combinePatch(tape,{\n    subtest : tryCatchPatch ,\n    should : tryCatchPatch\n  }) ;\n}\n\nexport default getPatchedTape ;","import _ from 'underscore';\nimport sinon from 'sinon';\nimport vm from 'vm';\nimport spy from './spy';\nimport getPatchedTape from './tape';\nimport { calendarFormat } from '../../node_modules/moment';\n\nconst wrapCode = (code = '') => {\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\n    return `let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ${loopHead}\n      detector(count++);\n    `;\n  });\n}\n\nconst runCode = (code, wrappedConsole) => {\n  let script = null;\n  let context = null;\n  const clock = sinon.useFakeTimers();\n  const test = getPatchedTape();\n  // should hijack setTimeout before pass to sandbox\n  const sandbox = {\n    setTimeout: window.setTimeout, // need to be passed also...\n    console: wrappedConsole,\n    sinon,   \n    describe: test,\n    test,\n    clock,\n    spy\n  };\n  try {\n    script = new vm.Script(wrapCode(code));\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n  } catch (e) {\n    script = new vm.Script(wrapCode(''));\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n    wrappedConsole.log(e);\n  }\n  clock.restore();\n}\nconst debouncedRunCode = _.debounce(runCode, 200);\n\nexport default debouncedRunCode ;","import React, { Component } from 'react';\nimport './MainPage.css';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.resize = this.resize.bind(this);\n    this.startResize = this.startResize.bind(this);\n    this.endResize = this.endResize.bind(this);\n    this.state = { width: this.props.width, height: this.props.height };\n  }\n  componentDidMount() {\n    document.querySelector('.test-panel').style.height =\n      window.innerHeight - this.state.height + 'px';\n  }\n  startResize(e) {\n    if (e.target.contains(this.ref.current)) {\n      window.addEventListener('mousemove', this.resize);\n      window.addEventListener('mouseup', this.endResize);\n    }\n  }\n  resize(e) {\n    this.setState({\n      width: this.props.allowWidth ? e.clientX - this.ref.current.offsetLeft : this.state.width,\n      height: this.props.allowHeight ? e.clientY - this.ref.current.offsetTop : this.state.height\n    });\n    document.querySelector('.test-panel').style.height =\n      window.innerHeight - document.querySelector('.code-panel').clientHeight + 'px';\n  }\n  endResize(e) {\n    window.removeEventListener('mousemove', this.resize);\n    window.removeEventListener('mouseup', this.endResize);\n    window.dispatchEvent(new Event('resize'));\n  }\n  render() {\n    return (\n      <div\n        ref={this.ref}\n        className={`border ${this.props.className ? this.props.className : ''}`}\n        onMouseDown={this.startResize}\n        style={\n          {\n            width: this.state.width + 'px',\n            height: this.state.height + 'px'\n          }\n        }\n      >\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nexport default Border;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  resetConsole\n} from '../../actions/console';\nimport './Console.css';\n\nclass Console extends Component {\n  constructor(props) {\n    super(props);\n    this.resetConsole = this.props.resetConsole;\n  }\n  render() {\n    return (\n      <div>\n        Console:\n        {\n          this.props.console.map(({ args }, index1) => \n            <div className=\"console\" key={index1}>\n              {\n                args.map((text, index2) => <div className=\"text\" key={index2}>{ `${text}`.trim() === '' ? <br/> : `${text}`.trim() }</div> )\n              }\n            </div> )\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => {\n    return {\n      console: state.console\n    };\n  },\n  dispatch => {\n    return {\n      resetConsole: () => dispatch(resetConsole())\n    };\n  }\n)(Console);\n\n","export function resetConsole() {\n  return {\n    type: 'CONSOLE/RESET'\n  };\n}\n\nexport function addConsole(key, ...args) {\n  return {\n    type: 'CONSOLE/ADD',\n    key,\n    args: [...args]\n  };\n}","const createWrappedConsole = (console, dispatch) => {\n  return Object.keys(console).reduce((cal, key) => {\n    cal[key] = (...args) => {\n      dispatch({ type: 'CONSOLE/ADD', key, args: [...args] });\n    };\n    return cal;\n  }, {});\n}\n\nexport default createWrappedConsole;","import _ from 'underscore';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { transform } from 'buble';\nimport brace from 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\nimport AceEditor from 'react-ace';\nimport { withRouter } from 'react-router-dom'\nimport Button from '@material-ui/core/Button';\n\nimport QuestionSelector from './QuestionSelector';\nimport questions from '../../questions';\nimport {\n  changeCode,\n  changeQuestion,\n  resetQuestion\n} from '../../actions/code';\nimport {\n  resetConsole\n} from '../../actions/console';\nimport './MainPage.css';\nimport debouncedRunCode from '../../utils/runCode';\nimport Border from './Border';\nimport Console from './Console';\nimport createWrappedConsole from '../../utils/consoleFactory';\nimport firebase from '../../utils/firebase';\nimport { fn } from '../../../node_modules/moment';\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testsRef = React.createRef();\n    this.wrappedConsole = createWrappedConsole(console, this.props.actions._dispatch);\n    this.state = { SyntaxError : '' } ;\n    this.handleSelected = this.handleSelected.bind(this);\n    // this.handleCodeChange = _.debounce(this.handleCodeChange.bind(this), 800);\n    this.handleCodeChange = this.handleCodeChange.bind(this);\n\n    this.actions = this.props.actions ;\n    this.resetQuestion = this.actions.resetQuestion ;\n    this.changeQuestion = this.actions.changeQuestion ;\n    this.changeCode = this.actions.changeCode;\n    this.resetConsole = this.actions.resetConsole;\n    this.changeSyntaxError = this.actions.changeSyntaxError;\n  }\n\n  componentDidMount() {\n    if (!this.props.isLogin) {\n      this.props.history.push('/js-exam/login');\n      return;\n    }\n    const { rawCode } = this.props ;\n    this.handleCodeChange(rawCode);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { compiledCode } = nextProps;\n    if (this.testsRef.current) {\n      this.testsRef.current.innerHTML = '';\n      debouncedRunCode(compiledCode, this.wrappedConsole);\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if ( this.props.index !== nextProps.index || nextProps.compiledCode === '' ){\n      this.handleCodeChange(nextProps.rawCode) ;\n    }\n  }\n\n  handleSelected(index) {\n    this.changeQuestion(index);\n  }\n\n  handleCodeChange(newCode) {\n    const fullCode = `${newCode} ${questions[this.props.index].test}`;\n    this.resetConsole();\n    try {\n      const { code } = transform(fullCode, {\n        transforms: {\n          dangerousForOf: true,\n          spreadRest: true\n        }\n      });\n      this.changeCode({ compiledCode : code , rawCode : newCode });\n      this.setState({ 'SyntaxError' : '' }) ;\n    } catch (e) {\n      this.changeCode({ rawCode : newCode });\n      if (e.loc) {\n        const { line, column } = e.loc;\n        this.setState({ SyntaxError : `Syntax error: line ${line}, column ${column}` }) ;\n      }\n    }\n  }\n\n  render() {\n    const { rawCode , index } = this.props;\n    return (\n      <div className=\"App\">\n        <Border className=\"input-panel\" allowWidth>\n          <Border \n            className=\"code-panel\"\n            allowHeight\n            width={window.innerWidth / 2}\n            height={window.innerHeight / 2}\n          >\n            <AceEditor\n              showPrintMargin={false}\n              mode=\"javascript\"\n              theme=\"monokai\"\n              onChange={this.handleCodeChange}\n              value={rawCode}\n              tabSize={2}\n              debounceChangePeriod={800}\n            />\n          </Border>\n          <div\n            className=\"test-panel\"\n          >\n            <AceEditor\n              showPrintMargin={false}\n              mode=\"javascript\"\n              theme=\"textmate\"\n              value={questions[index].test}\n              readOnly={true}\n              tabSize={2}\n              debounceChangePeriod={800}\n            />\n          </div>\n        </Border>\n        <div className=\"result-panel\">\n          <div className=\"additional-info\">\n            <QuestionSelector\n              handleSelected={this.handleSelected}\n              activeIndex={index}\n            />\n            <Button\n              variant=\"outlined\"\n              onClick={(this.resetQuestion)}\n            >\n              Reset\n            </Button>\n            {!this.state.SyntaxError\n              ? null\n              : <div className=\"syntax-error\">\n                  {this.state.SyntaxError}\n                </div>}\n          </div>\n          <Border \n            className=\"control-panel\"\n            allowHeight\n            width={window.innerWidth / 2}\n            height={window.innerHeight / 2}\n          >\n            <div id=\"tests\" ref={this.testsRef} />\n          </Border>\n          <Console />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  state => {\n    const { code : codeObj } = state ;\n    const { index } = codeObj ;\n    const compiledCode = codeObj.compiledCode ;\n    const rawCode = ( codeObj[index] && codeObj[index].code ) || questions[index].content ;\n    return {\n      rawCode ,\n      compiledCode ,\n      index,\n      isLogin: state.login.isLogin\n    };\n  },\n  dispatch => {\n    return {\n      actions: {\n        changeCode: (args) => dispatch(changeCode(args)) ,\n        changeQuestion : index => dispatch(changeQuestion(index)) ,\n        resetQuestion : () => dispatch(resetQuestion()),\n        _dispatch: dispatch,\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(MainPage));\n","export function changeCode({ compiledCode , rawCode }) {\n  return {\n    type: 'CODE/CHANGE',\n    compiledCode ,\n    rawCode \n  };\n}\n\nexport function changeQuestion(index) {\n  return {\n    type: 'QUESTION/CHANGE',\n    index\n  };\n}\n\nexport function resetQuestion(index) {\n  return {\n    type: 'QUESTION/RESET'\n  };\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { submitPassword } from '../actions/login';\nimport './LoginPage.css';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.actions = this.props.actions;\n    this.submitPassword = this.actions.submitPassword;\n    this.state = { password: '', error: '' };\n  }\n  componentDidUpdate() {\n    if (this.props.isLogin) {\n      this.props.history.push('/js-exam');\n    }\n  }\n  render() {\n    return (\n      <div className=\"login\">\n        <TextField\n          onChange={e => this.setState({ password: e.target.value })}\n          margin=\"normal\"\n          placeholder=\"input the password to login\"\n          onKeyDown={e => {\n            if(e.keyCode === 13) {\n              this.submitPassword(this.state.password )\n            }\n          }}\n        />\n        <Button\n          variant=\"outlined\"\n          onClick={() => this.submitPassword(this.state.password)}\n        >\n          Login\n        </Button>\n        <div className=\"error\">{ this.state.error }</div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  state => {\n    return {\n      isLogin: state.login.isLogin\n    };\n  },\n  dispatch => {\n    return {\n      actions: {\n        submitPassword: (password) => dispatch(submitPassword(password))\n      }\n    };\n  }\n)(LoginPage));\n","export function submitPassword(password) {\n  return {\n    type: 'LOGIN/LOGIN',\n    password\n  };\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom'\n\nimport MainPage from './components/MainPage/';\nimport LoginPage from './components/LoginPage';\n\nconst App = () => (\n  <Router>\n    <div>\n      <Route exact path=\"/js-exam/\" component={MainPage} />\n      <Route path=\"/js-exam/login\" component={LoginPage} />\n    </div>\n  </Router>\n)\n\nexport default App;","const code = (state = { index : 0 }, action) => {\n  switch(action.type) {\n    case 'CODE/RESET':\n      return state ;\n    case 'CODE/CHANGE':\n      return {\n        ...state ,\n        compiledCode: action.compiledCode || state.compiledCode ,\n        [state.index] : {\n          code : action.rawCode \n        } \n      }\n    case 'QUESTION/RESET':\n      return {\n        ...state,\n        compiledCode : '' ,\n        [state.index] : {\n          code : '' \n        } \n      }\n    case 'QUESTION/CHANGE':\n      return {\n        ...state,\n        index : action.index ,\n        compiledCode : ''\n      }\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","import { authLogin } from '../utils/authLogin';\n\nconst login = (state = { isLogin: false }, action) => {\n  switch(action.type) {\n    case 'LOGIN/LOGIN': {\n      return { isLogin: authLogin(action.password) } ;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const authLogin = (s) => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\n\nexport {\n  authLogin\n}","const _console = (state = [], action) => {\n  switch(action.type) {\n    case 'CONSOLE/RESET':\n      return [] ;\n    case 'CONSOLE/ADD':\n      return [\n        ...state,\n        {\n          key: action.key,\n          args: action.args\n        }\n      ]\n    default:\n      return state;\n  }\n};\n\nexport default _console;\n","import { combineReducers } from 'redux';\nimport code from './code';\nimport login from './login';\nimport _console from './console';\n\nconst reducer = combineReducers({\n  code,\n  login,\n  console: _console\n});\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
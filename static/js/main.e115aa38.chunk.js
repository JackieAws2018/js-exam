(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{137:function(n,e,t){},180:function(n,e,t){n.exports=t(403)},326:function(n,e){},328:function(n,e){},358:function(n,e){},371:function(n,e,t){},401:function(n,e,t){},403:function(n,e,t){"use strict";t.r(e);var a=t(0),o=t.n(a),c=t(19),r=t.n(c),s=t(405),i=t(404),u=t(28),l=t(29),d=t(31),h=t(30),p=t(32),m=t(17),f=t(98),b=t.n(f),g=t(42),y=t(169),w=(t(71),t(191),t(193),t(194),t(101)),v=t.n(w),k=t(406),S=t(41),C=t.n(S),E=t(99),x=t(174),O=t.n(x),j=t(173),q=t.n(j),D=[{name:"countChar",content:"\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n",test:"\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n"},{name:"forEach, map and reduce",content:"\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n",test:"\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n"},{name:"adder",content:"\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n",test:"\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n"},{name:"infinite adder",content:"\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n",test:"\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n"},{name:"default function",content:"\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n",test:"\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n})\n\n"},{name:"sequential",content:"\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n",test:"\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    "},{name:"parallel",content:"\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n",test:"\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n"},{name:"combineReducers",content:"\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n",test:"\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n"},{name:"applyMiddleware",content:"\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n",test:"\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n  \n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n"},{name:"createStore",content:"\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n",test:"\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    const unsubscribe = store.subscribe(() => dispatchCount *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    unsubscribe();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n"},{name:"explain",content:"\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n"},{name:"mergeSort",content:"\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n",test:"\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n"}],T=function(n){function e(n){var t;return Object(u.a)(this,e),(t=Object(d.a)(this,Object(h.a)(e).call(this,n))).state={anchorEl:null},t.handleClicked=t.handleClicked.bind(Object(m.a)(Object(m.a)(t))),t}return Object(p.a)(e,n),Object(l.a)(e,[{key:"handleClicked",value:function(n){this.setState({anchorEl:n.currentTarget})}},{key:"render",value:function(){var n=this.handleClicked,e=this.props,t=e.handleSelected,a=e.activeIndex,c=e.classes,r=this.state.anchorEl,s=D.map(function(e,a){return o.a.createElement(q.a,{key:a,value:a,onClick:function(){n(!1),t(a)}},e.name)});return o.a.createElement("div",null,o.a.createElement(C.a,{"aria-owns":r?"simple-menu":null,"aria-haspopup":"true",className:c.button,variant:"outlined",onClick:n},"".concat(D[a].name,"  \u25bc")),o.a.createElement(O.a,{id:"simple-menu",open:Boolean(r),anchorEl:r},s))}}]),e}(a.Component),A=Object(E.withStyles)(function(){return{button:{"text-transform":"none"}}})(T);t(137);var N=t(102),I=t.n(N),R=t(103),L=t.n(R),M=function(n,e){var t=n[e],a=[],o={},c=Math.random().toFixed(4)+"";return n[e]=function(){for(var e=arguments.length,r=new Array(e),s=0;s<e;s++)r[s]=arguments[s];var i=t.apply(n,r);return a.push(r),o[r.join(c)]=!0,i},{calledWith:function(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return!!o[e.join(c)]},callCount:function(){return a.length},restore:function(){return n[e]=t}}},z=t(179),F=t(178),W=function(n){return function(e,t){try{n.comment(e),t(n)}catch(a){n.fail(a)}}},Q=function(){delete t.c[152];var n=t(152);return t(359)(n),function(n,e){return function(){for(var t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];var c=a.slice(-1),r=Object(F.a)(c,1)[0];if("function"!==typeof r)throw new Error("should provide callback");n.apply(void 0,Object(z.a)(a.slice(0,-1)).concat([function(n){for(var t in e)n[t]=e[t](n);try{r(n)}catch(a){n.fail(a)}}]))}}(n,{subtest:W,should:W})},H=b.a.debounce(function(n){var e=Q(),t=I.a.useFakeTimers(),a={setTimeout:window.setTimeout,console:console,sinon:I.a,describe:e,test:e,clock:t,spy:M},o=new L.a.Script(function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").replace(/for *\(.*\{|while *\(.*\{|do *\{/g,function(n){return"let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ".concat(n,"\n      detector(count++);\n    ")})}(n)),c=new L.a.createContext(a);o.runInContext(c),t.restore()},200),_=function(n){function e(n){var t;return Object(u.a)(this,e),(t=Object(d.a)(this,Object(h.a)(e).call(this,n))).ref=o.a.createRef(),t.resize=t.resize.bind(Object(m.a)(Object(m.a)(t))),t.startResize=t.startResize.bind(Object(m.a)(Object(m.a)(t))),t.endResize=t.endResize.bind(Object(m.a)(Object(m.a)(t))),t.state={width:t.props.width,height:t.props.height},t}return Object(p.a)(e,n),Object(l.a)(e,[{key:"componentDidMount",value:function(){document.querySelector(".test-panel").style.height=window.innerHeight-this.state.height+"px"}},{key:"startResize",value:function(n){n.target.contains(this.ref.current)&&(window.addEventListener("mousemove",this.resize),window.addEventListener("mouseup",this.endResize))}},{key:"resize",value:function(n){this.setState({width:this.props.allowWidth?n.clientX-this.ref.current.offsetLeft:this.state.width,height:this.props.allowHeight?n.clientY-this.ref.current.offsetTop:this.state.height}),document.querySelector(".test-panel").style.height=window.innerHeight-document.querySelector(".code-panel").clientHeight+"px"}},{key:"endResize",value:function(n){window.removeEventListener("mousemove",this.resize),window.removeEventListener("mouseup",this.endResize),window.dispatchEvent(new Event("resize"))}},{key:"render",value:function(){return o.a.createElement("div",{ref:this.ref,className:"border ".concat(this.props.className?this.props.className:""),onMouseDown:this.startResize,style:{width:this.state.width+"px",height:this.state.height+"px"}},this.props.children)}}]),e}(a.Component),P=(t(363),t(366),t(368),function(n){function e(n){var t;return Object(u.a)(this,e),(t=Object(d.a)(this,Object(h.a)(e).call(this,n))).testsRef=null,t.state={SyntaxError:""},t.handleSelected=t.handleSelected.bind(Object(m.a)(Object(m.a)(t))),t.handleCodeChange=t.handleCodeChange.bind(Object(m.a)(Object(m.a)(t))),t.actions=t.props.actions,t.resetQuestion=t.actions.resetQuestion,t.changeQuestion=t.actions.changeQuestion,t.changeCode=t.actions.changeCode,t.changeSyntaxError=t.actions.changeSyntaxError,t}return Object(p.a)(e,n),Object(l.a)(e,[{key:"componentDidMount",value:function(){if(this.props.isLogin){var n=this.props.rawCode;this.handleCodeChange(n)}else this.props.history.push("/js-exam/login")}},{key:"componentWillUpdate",value:function(n,e){var t=n.compiledCode;this.testsRef&&(this.testsRef.innerHTML="",H(t))}},{key:"componentWillReceiveProps",value:function(n){this.props.index===n.index&&""!==n.compiledCode||this.handleCodeChange(n.rawCode)}},{key:"handleSelected",value:function(n){this.changeQuestion(n)}},{key:"handleCodeChange",value:function(n){var e="".concat(n," ").concat(D[this.props.index].test);try{var t=Object(y.a)(e,{transforms:{dangerousForOf:!0,spreadRest:!0}}).code;this.changeCode({compiledCode:t,rawCode:n}),this.setState({SyntaxError:""})}catch(r){if(this.changeCode({rawCode:n}),r.loc){var a=r.loc,o=a.line,c=a.column;this.setState({SyntaxError:"Syntax error: line ".concat(o,", column ").concat(c)})}}}},{key:"render",value:function(){var n=this,e=this.props,t=e.rawCode,a=e.index;return o.a.createElement("div",{className:"App"},o.a.createElement(_,{className:"input-panel",allowWidth:!0},o.a.createElement(_,{className:"code-panel",allowHeight:!0,width:window.innerWidth/2,height:window.innerHeight/2},o.a.createElement(v.a,{showPrintMargin:!1,mode:"javascript",theme:"monokai",onChange:this.handleCodeChange,value:t,tabSize:2,debounceChangePeriod:800})),o.a.createElement("div",{className:"test-panel"},o.a.createElement(v.a,{showPrintMargin:!1,mode:"javascript",theme:"textmate",value:D[a].test,readOnly:!0,tabSize:2,debounceChangePeriod:800}))),o.a.createElement("div",{className:"result-panel"},o.a.createElement("div",{className:"additional-info"},o.a.createElement(A,{handleSelected:this.handleSelected,activeIndex:a}),o.a.createElement(C.a,{variant:"outlined",onClick:this.resetQuestion},"Reset"),this.state.SyntaxError?o.a.createElement("div",{className:"syntax-error"},this.state.SyntaxError):null),o.a.createElement("div",{id:"tests",ref:function(e){return n.testsRef=e}})))}}]),e}(a.Component)),V=Object(k.a)(Object(g.b)(function(n){var e=n.code,t=e.index,a=e.compiledCode;return{rawCode:e[t]&&e[t].code||D[t].content,compiledCode:a,index:t,isLogin:n.login.isLogin}},function(n){return{actions:{changeCode:function(e){return n({type:"CODE/CHANGE",compiledCode:(t=e).compiledCode,rawCode:t.rawCode});var t},changeQuestion:function(e){return n(function(n){return{type:"QUESTION/CHANGE",index:n}}(e))},resetQuestion:function(){return n({type:"QUESTION/RESET"})}}}})(P)),G=t(176),U=t.n(G);t(371);var X=function(n){function e(n){var t;return Object(u.a)(this,e),(t=Object(d.a)(this,Object(h.a)(e).call(this,n))).actions=t.props.actions,t.submitPassword=t.actions.submitPassword,t.state={password:"",error:""},t}return Object(p.a)(e,n),Object(l.a)(e,[{key:"componentDidUpdate",value:function(){this.props.isLogin&&this.props.history.push("/js-exam")}},{key:"render",value:function(){var n=this;return o.a.createElement("div",{className:"login"},o.a.createElement(U.a,{onChange:function(e){return n.setState({password:e.target.value})},margin:"normal",placeholder:"input the password to login",onKeyDown:function(e){13===e.keyCode&&n.submitPassword(n.state.password)}}),o.a.createElement(C.a,{variant:"outlined",onClick:function(){return n.submitPassword(n.state.password)}},"Login"),o.a.createElement("div",{className:"error"},this.state.error))}}]),e}(o.a.Component),B=Object(k.a)(Object(g.b)(function(n){return{isLogin:n.login.isLogin}},function(n){return{actions:{submitPassword:function(e){return n(function(n){return{type:"LOGIN/LOGIN",password:n}}(e))}}}})(X)),J=function(){return o.a.createElement(s.a,null,o.a.createElement("div",null,o.a.createElement(i.a,{exact:!0,path:"/js-exam/",component:V}),o.a.createElement(i.a,{path:"/js-exam/login",component:B})))},Y=(t(401),t(40)),K=t(53),Z=t(69),$=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{index:0},e=arguments.length>1?arguments[1]:void 0;switch(e.type){case"CODE/RESET":return n;case"CODE/CHANGE":return Object(Z.a)({},n,Object(K.a)({compiledCode:e.compiledCode||n.compiledCode},n.index,{code:e.rawCode}));case"QUESTION/RESET":return Object(Z.a)({},n,Object(K.a)({compiledCode:""},n.index,{code:""}));case"QUESTION/CHANGE":return Object(Z.a)({},n,{index:e.index,compiledCode:""});default:return n}},nn=function(){var n,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{isLogin:!1},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"LOGIN/LOGIN":return{isLogin:(n=t.password,"".concat(((new Date).getFullYear()+1)*((new Date).getMonth()+1)*((new Date).getDate()+1)*((new Date).getHours()+1)).slice(0,4)===n)};default:return e}},en=Object(Y.b)({code:$,login:nn}),tn=Object(Y.c)(en,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__());r.a.render(o.a.createElement(g.a,{store:tn},o.a.createElement(J,null)),document.getElementById("root"))}},[[180,2,1]]]);
//# sourceMappingURL=main.e115aa38.chunk.js.map